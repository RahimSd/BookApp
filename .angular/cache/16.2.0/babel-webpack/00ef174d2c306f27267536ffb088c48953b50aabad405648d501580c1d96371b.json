{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SharedService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'http://localhost:3000';\n  }\n  isEmptyVal(val) {\n    if (val == 'undefined' || val == undefined || val == '' || val == 'null' || val == null) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  registerUsersList(registerData) {\n    // console.log('rigistreUsers List', registerData);\n    return this.http.post(this.url + '/registerUsers', registerData);\n  }\n  getregistrUsersList() {\n    return this.http.get('http://localhost:3000/registerUsers');\n  }\n  getAuthorBooks() {\n    return this.http.get(this.url + '/authorBooks');\n  }\n  getRecomndadeBooks() {\n    return this.http.get(this.url + '/recommendedBooks');\n  }\n}\n_class = SharedService;\n_class.ɵfac = function SharedService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["SharedService","constructor","http","url","isEmptyVal","val","undefined","registerUsersList","registerData","post","getregistrUsersList","get","getAuthorBooks","getRecomndadeBooks","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Saritha\\BookApp\\src\\app\\SERVICES\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Register } from '../MODEL/register';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n  url = 'http://localhost:3000';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  isEmptyVal(val: any) {\r\n    if (val == 'undefined' || val == undefined || val == '' || val == 'null' || val == null) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n  registerUsersList(registerData: Register): Observable<any> {\r\n    // console.log('rigistreUsers List', registerData);\r\n    return this.http.post(this.url + '/registerUsers', registerData);\r\n  }\r\n  getregistrUsersList(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/registerUsers');\r\n  }\r\n  getAuthorBooks(): Observable<any> {   // get to execute the observale subscribe\r\n    return this.http.get(this.url + '/authorBooks')\r\n  }\r\n  getRecomndadeBooks(): Observable<any> {\r\n    return this.http.get(this.url + '/recommendedBooks');\r\n  }\r\n}\r\n"],"mappings":";;;AAQA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,GAAG,GAAG,uBAAuB;EACW;EAExCC,UAAUA,CAACC,GAAQ;IACjB,IAAIA,GAAG,IAAI,WAAW,IAAIA,GAAG,IAAIC,SAAS,IAAID,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,MAAM,IAAIA,GAAG,IAAI,IAAI,EAAE;MACvF,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,KAAK;;EAEhB;EACAE,iBAAiBA,CAACC,YAAsB;IACtC;IACA,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACN,GAAG,GAAG,gBAAgB,EAAEK,YAAY,CAAC;EAClE;EACAE,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,qCAAqC,CAAC;EAC7D;EACAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,GAAG,GAAG,cAAc,CAAC;EACjD;EACAU,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,GAAG,GAAG,mBAAmB,CAAC;EACtD;;SAvBWH,aAAa;;mBAAbA,MAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbjB,MAAa;EAAAkB,OAAA,EAAblB,MAAa,CAAAmB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}